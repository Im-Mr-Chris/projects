// C.Celaya -88490043
// File name: projects/05/Memory.hdl

/**
* The complete address space of the computer's memory,
* including RAM and memory mapped I/O. 
* The chip facilitates read and write operations, as follows:
*     Read:  out(t) = Memory[address(t)](t)
*     Write: If load(t-1) then Memory[address(t-1)](t) = in(t-1)
* In words: the chip always outputs the value stored at the memory 
* location specified by address. If load=1, the in value is loaded 
* into the memory location specified by address.  This value becomes 
* available through the out output starting from the next time step.
* Address space rules:
* Only the upper 16K+8K+1 words of the Memory chip are used. 
* Access to address>0x6000 is invalid. Access to any address in 
* the range 0x4000â€“0x5FFF results in accessing the screen memory 
* map. Access to address 0x6000 results in accessing the keyboard 
* memory map. The behavior in these addresses is described in the 
* Screen and Keyboard chip specifications.
*/

CHIP Memory {

	IN  in[16], load, address[15];
	OUT out[16];

PARTS:

	// 00/01; @main memory
	// 10; @screen
	// 11; @keyboard
	DMux4Way(sel=address[13..14], in=load, a=loadRAM1, b=loadRAM2, c=loadScreen);

	Or(a=loadRAM1, b=loadRAM2, out=loadRAM);

	// goto here if 00 or 01
	RAM16K(address=address[0..13], in=in, out=RAMOut, load=loadRAM);

	// goto here if 10
	Screen(address=address[0..12], in=in, out=screenOut, load=loadScreen);

	// arrive if 11
	Keyboard(out=kbdOut);									

	Mux4Way16(sel=address[13..14], a=RAMout, b=RAMout, c=screenOut, d=kbdOut, out=out);
}



